{"ast":null,"code":"const base_url = \"http://localhost:8080/jpareststarter\";\n\nfunction handleHttpErrors(res) {\n  if (!res.ok) {\n    return Promise.reject({\n      status: res.status,\n      fullError: res.json()\n    });\n  }\n\n  return res.json();\n}\n\nfunction demoFacade() {\n  const fetchData = url => {\n    const options = makeOptions(\"GET\", true); //True add's the token\n\n    return fetch(base_url + url, options).then(handleHttpErrors);\n  };\n\n  const getUser = () => {\n    const data = fetchData(\"/api/info/user\");\n    return data;\n  };\n\n  const getAdmin = () => {\n    const data = fetchData(\"/api/info/admin\");\n    return data;\n  };\n\n  const getData = () => {\n    const data = fetchData(\"/api/info/data\");\n    return data;\n  };\n\n  const getToken = () => {\n    return localStorage.getItem('jwtToken');\n  };\n\n  const makeOptions = (method, addToken, body) => {\n    var opts = {\n      method: method,\n      headers: {\n        \"Content-type\": \"application/json\",\n        'Accept': 'application/json',\n        'Origin': '*'\n      }\n    };\n\n    if (addToken && loggedIn()) {\n      opts.headers[\"x-access-token\"] = getToken();\n    }\n\n    if (body) {\n      opts.body = JSON.stringify(body);\n    }\n\n    return opts;\n  };\n\n  return {\n    getUser,\n    getAdmin,\n    getData\n  };\n}\n\nconst facade = demoFacade();\nexport default facade;","map":{"version":3,"sources":["/Users/cecilie/NetBeansProjects/CA_03/Eksamen_Startkode_Frontend/src/demoFacade.js"],"names":["base_url","handleHttpErrors","res","ok","Promise","reject","status","fullError","json","demoFacade","fetchData","url","options","makeOptions","fetch","then","getUser","data","getAdmin","getData","getToken","localStorage","getItem","method","addToken","body","opts","headers","loggedIn","JSON","stringify","facade"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,sCAAjB;;AAEA,SAASC,gBAAT,CAA0BC,GAA1B,EAA+B;AAC3B,MAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACT,WAAOC,OAAO,CAACC,MAAR,CAAe;AAAEC,MAAAA,MAAM,EAAEJ,GAAG,CAACI,MAAd;AAAsBC,MAAAA,SAAS,EAAEL,GAAG,CAACM,IAAJ;AAAjC,KAAf,CAAP;AACH;;AACD,SAAON,GAAG,CAACM,IAAJ,EAAP;AACH;;AAED,SAASC,UAAT,GAAsB;AAClB,QAAMC,SAAS,GAAIC,GAAD,IAAS;AACvB,UAAMC,OAAO,GAAGC,WAAW,CAAC,KAAD,EAAQ,IAAR,CAA3B,CADuB,CACmB;;AAC1C,WAAOC,KAAK,CAACd,QAAQ,GAAGW,GAAZ,EAAiBC,OAAjB,CAAL,CAA+BG,IAA/B,CAAoCd,gBAApC,CAAP;AACH,GAHD;;AAIA,QAAMe,OAAO,GAAG,MAAM;AAClB,UAAMC,IAAI,GAAGP,SAAS,CAAC,gBAAD,CAAtB;AACA,WAAOO,IAAP;AACH,GAHD;;AAKA,QAAMC,QAAQ,GAAG,MAAM;AACnB,UAAMD,IAAI,GAAGP,SAAS,CAAC,iBAAD,CAAtB;AACA,WAAOO,IAAP;AACH,GAHD;;AAIA,QAAME,OAAO,GAAG,MAAM;AAClB,UAAMF,IAAI,GAAGP,SAAS,CAAC,gBAAD,CAAtB;AACA,WAAOO,IAAP;AACH,GAHD;;AAIA,QAAMG,QAAQ,GAAG,MAAM;AACnB,WAAOC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAP;AACH,GAFD;;AAIA,QAAMT,WAAW,GAAG,CAACU,MAAD,EAASC,QAAT,EAAmBC,IAAnB,KAA4B;AAC5C,QAAIC,IAAI,GAAG;AACPH,MAAAA,MAAM,EAAEA,MADD;AAEPI,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU,kBAFL;AAGL,kBAAU;AAHL;AAFF,KAAX;;AAQA,QAAIH,QAAQ,IAAII,QAAQ,EAAxB,EAA4B;AACxBF,MAAAA,IAAI,CAACC,OAAL,CAAa,gBAAb,IAAiCP,QAAQ,EAAzC;AACH;;AACD,QAAIK,IAAJ,EAAU;AACNC,MAAAA,IAAI,CAACD,IAAL,GAAYI,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAZ;AACH;;AACD,WAAOC,IAAP;AACH,GAhBD;;AAiBA,SAAO;AACHV,IAAAA,OADG;AAEHE,IAAAA,QAFG;AAGHC,IAAAA;AAHG,GAAP;AAKH;;AACD,MAAMY,MAAM,GAAGtB,UAAU,EAAzB;AACA,eAAesB,MAAf","sourcesContent":["const base_url = \"http://localhost:8080/jpareststarter\";\n\nfunction handleHttpErrors(res) {\n    if (!res.ok) {\n        return Promise.reject({ status: res.status, fullError: res.json() })\n    }\n    return res.json();\n}\n\nfunction demoFacade() {\n    const fetchData = (url) => {\n        const options = makeOptions(\"GET\", true); //True add's the token\n        return fetch(base_url + url, options).then(handleHttpErrors);\n    }\n    const getUser = () => {\n        const data = fetchData(\"/api/info/user\");\n        return data;\n    }\n\n    const getAdmin = () => {\n        const data = fetchData(\"/api/info/admin\");\n        return data;\n    }\n    const getData = () => {\n        const data = fetchData(\"/api/info/data\");\n        return data;\n    }\n    const getToken = () => {\n        return localStorage.getItem('jwtToken')\n    }\n\n    const makeOptions = (method, addToken, body) => {\n        var opts = {\n            method: method,\n            headers: {\n                \"Content-type\": \"application/json\",\n                'Accept': 'application/json',\n                'Origin': '*'\n            }\n        }\n        if (addToken && loggedIn()) {\n            opts.headers[\"x-access-token\"] = getToken();\n        }\n        if (body) {\n            opts.body = JSON.stringify(body);\n        }\n        return opts;\n    }\n    return {\n        getUser,\n        getAdmin,\n        getData\n    }\n}\nconst facade = demoFacade();\nexport default facade;\n"]},"metadata":{},"sourceType":"module"}